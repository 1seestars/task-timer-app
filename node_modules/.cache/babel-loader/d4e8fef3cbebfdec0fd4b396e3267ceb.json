{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions';\n\nclass Timer extends React.Component {\n  shouldComponentUpdate() {\n    const _this$props = this.props,\n          isTimerWorking = _this$props.isTimerWorking,\n          minutes = _this$props.minutes,\n          seconds = _this$props.seconds,\n          increaseMinutesCount = _this$props.increaseMinutesCount,\n          increaseSecondsCount = _this$props.increaseSecondsCount;\n    this.interval = setInterval(() => increaseSecondsCount(), 1000);\n    clearInterval(this.interval); // if(seconds > 5){\n    //     increaseMinutesCount()\n    // } else {\n    //     this.interval = setInterval(() => increaseSecondsCount(), 1000)\n    // }\n  } // componentDidUpdate() {\n  //     clearInterval(this.interval)\n  // }\n\n\n  render() {\n    const _this$props2 = this.props,\n          minutes = _this$props2.minutes,\n          seconds = _this$props2.seconds;\n    console.log();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, minutes < 10 ? `0${minutes}` : minutes, \":\", seconds < 10 ? `0${seconds}` : seconds);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isTimerWorking: state.isTimerWorking,\n    minutes: state.time.minutes,\n    seconds: state.time.seconds\n  };\n};\n\nconst mapDispatchToProps = {\n  increaseMinutesCount,\n  increaseSecondsCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx"],"names":["React","connect","increaseMinutesCount","increaseSecondsCount","Timer","Component","shouldComponentUpdate","props","isTimerWorking","minutes","seconds","interval","setInterval","clearInterval","render","console","log","mapStateToProps","state","time","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,kBAA3D;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,qBAAqB,GAAE;AAAA,wBAOf,KAAKC,KAPU;AAAA,UAEfC,cAFe,eAEfA,cAFe;AAAA,UAGfC,OAHe,eAGfA,OAHe;AAAA,UAIfC,OAJe,eAIfA,OAJe;AAAA,UAKfR,oBALe,eAKfA,oBALe;AAAA,UAMfC,oBANe,eAMfA,oBANe;AASnB,SAAKQ,QAAL,GAAgBC,WAAW,CAAC,MAAMT,oBAAoB,EAA3B,EAA+B,IAA/B,CAA3B;AAEAU,IAAAA,aAAa,CAAC,KAAKF,QAAN,CAAb,CAXmB,CAcnB;AACA;AACA;AACA;AACA;AACH,GApB8B,CAsB/B;AACA;AACA;;;AAEAG,EAAAA,MAAM,GAAE;AAAA,yBAIA,KAAKP,KAJL;AAAA,UAEAE,OAFA,gBAEAA,OAFA;AAAA,UAGAC,OAHA,gBAGAA,OAHA;AAMJK,IAAAA,OAAO,CAACC,GAAR;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMP,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OADtC,OACiDC,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OADjF,CADJ;AAKH;;AAvC8B;;AA0CnC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,cAAc,EAAEU,KAAK,CAACV,cADnB;AAEHC,IAAAA,OAAO,EAAES,KAAK,CAACC,IAAN,CAAWV,OAFjB;AAGHC,IAAAA,OAAO,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AAHjB,GAAP;AAKH,CAND;;AAQA,MAAMU,kBAAkB,GAAG;AAAElB,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAA3B;AAEA,eAAeF,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions'\n\nclass Timer extends React.Component{\n    shouldComponentUpdate(){\n        const { \n            isTimerWorking,\n            minutes,\n            seconds,\n            increaseMinutesCount,\n            increaseSecondsCount\n        } = this.props\n\n        this.interval = setInterval(() => increaseSecondsCount(), 1000)\n\n        clearInterval(this.interval)\n\n        \n        // if(seconds > 5){\n        //     increaseMinutesCount()\n        // } else {\n        //     this.interval = setInterval(() => increaseSecondsCount(), 1000)\n        // }\n    }\n\n    // componentDidUpdate() {\n    //     clearInterval(this.interval)\n    // }\n\n    render(){\n        const {\n            minutes,\n            seconds\n        } = this.props\n\n        console.log()\n\n        return(\n            <div>       \n                {(minutes < 10) ? `0${minutes}` : minutes}:{(seconds < 10) ? `0${seconds}` : seconds}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        minutes: state.time.minutes,\n        seconds: state.time.seconds\n    }\n}\n\nconst mapDispatchToProps = { increaseMinutesCount, increaseSecondsCount }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)"]},"metadata":{},"sourceType":"module"}