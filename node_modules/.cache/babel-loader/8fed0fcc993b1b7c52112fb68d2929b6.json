{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-app/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeSecondsCount, resetCount } from '../store/actions';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    this.props.changeSecondsCount();\n  }\n\n  render() {\n    const _this$props = this.props,\n          isTimerWorking = _this$props.isTimerWorking,\n          seconds = _this$props.seconds,\n          changeSecondsCount = _this$props.changeSecondsCount,\n          resetCount = _this$props.resetCount;\n\n    if (isTimerWorking) {\n      setTimeout(() => changeSecondsCount(), 1000);\n    } else if (seconds) {\n      setImmediate(() => resetCount());\n    }\n\n    const showMinutes = parseInt(parseInt(seconds) / 60);\n    const showSeconds = parseInt(seconds) % 60;\n    return React.createElement(\"div\", {\n      id: \"clock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, showMinutes < 10 ? `0${showMinutes}` : showMinutes, \":\", showSeconds < 10 ? `0${showSeconds}` : showSeconds);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isTimerWorking: state.isTimerWorking,\n    seconds: state.seconds\n  };\n};\n\nconst mapDispatchToProps = {\n  changeSecondsCount,\n  resetCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-app/task-timer-app/src/components/Timer.jsx"],"names":["React","connect","changeSecondsCount","resetCount","Timer","Component","componentDidMount","props","render","isTimerWorking","seconds","setTimeout","setImmediate","showMinutes","parseInt","showSeconds","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,kBAA/C;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWL,kBAAX;AACH;;AACDM,EAAAA,MAAM,GAAE;AAAA,wBAC8D,KAAKD,KADnE;AAAA,UACGE,cADH,eACGA,cADH;AAAA,UACmBC,OADnB,eACmBA,OADnB;AAAA,UAC4BR,kBAD5B,eAC4BA,kBAD5B;AAAA,UACgDC,UADhD,eACgDA,UADhD;;AAEJ,QAAGM,cAAH,EAAkB;AACdE,MAAAA,UAAU,CAAC,MAAMT,kBAAkB,EAAzB,EAA6B,IAA7B,CAAV;AACH,KAFD,MAEO,IAAGQ,OAAH,EAAW;AACdE,MAAAA,YAAY,CAAC,MAAMT,UAAU,EAAjB,CAAZ;AACH;;AACD,UAAMU,WAAW,GAAGC,QAAQ,CAACA,QAAQ,CAACJ,OAAD,CAAR,GAAkB,EAAnB,CAA5B;AACA,UAAMK,WAAW,GAAGD,QAAQ,CAACJ,OAAD,CAAR,GAAoB,EAAxC;AACA,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMG,WAAW,GAAG,EAAf,GAAsB,IAAGA,WAAY,EAArC,GAAyCA,WAD9C,OAC6DE,WAAW,GAAG,EAAf,GAAsB,IAAGA,WAAY,EAArC,GAAyCA,WADrG,CADJ;AAKH;;AAlB8B;;AAqBnC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHR,IAAAA,cAAc,EAAEQ,KAAK,CAACR,cADnB;AAEHC,IAAAA,OAAO,EAAEO,KAAK,CAACP;AAFZ,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAG;AACvBhB,EAAAA,kBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeF,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { changeSecondsCount, resetCount } from '../store/actions'\n\nclass Timer extends React.Component{\n    componentDidMount(){\n        this.props.changeSecondsCount()\n    }\n    render(){\n        const {isTimerWorking, seconds, changeSecondsCount, resetCount} = this.props\n        if(isTimerWorking){\n            setTimeout(() => changeSecondsCount(), 1000)\n        } else if(seconds){\n            setImmediate(() => resetCount())\n        }\n        const showMinutes = parseInt(parseInt(seconds)/60)\n        const showSeconds = parseInt(seconds) % 60\n        return(\n            <div id=\"clock\">       \n                {(showMinutes < 10) ? `0${showMinutes}` : showMinutes}:{(showSeconds < 10) ? `0${showSeconds}` : showSeconds}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        seconds: state.seconds,\n    }\n}\n\nconst mapDispatchToProps = { \n    changeSecondsCount,\n    resetCount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)"]},"metadata":{},"sourceType":"module"}