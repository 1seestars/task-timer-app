{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nexport const Timer = props => {\n  const work = props.work,\n        start = props.start,\n        minutes = props.minutes,\n        seconds = props.seconds,\n        plusMinute = props.plusMinute,\n        plusSecond = props.plusSecond,\n        restart = props.restart;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, showMinutes < 10 ? `0${showMinutes}` : showMinutes, \":\", showSeconds < 10 ? `0${showSeconds}` : showSeconds);\n};\n/*\n    let timeOut\n    if(work){\n        timeOut = setTimeout(() => plusSecond(), 1000)\n        if(seconds > 59){\n            plusMinute()\n            clearTimeout(timeOut)\n        }\n    } else if(!work){\n        restart()\n        clearTimeout(timeOut)\n    }\n*/","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx"],"names":["React","Timer","props","work","start","minutes","seconds","plusMinute","plusSecond","restart","showMinutes","showSeconds"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,QAEtBC,IAFsB,GAStBD,KATsB,CAEtBC,IAFsB;AAAA,QAGtBC,KAHsB,GAStBF,KATsB,CAGtBE,KAHsB;AAAA,QAItBC,OAJsB,GAStBH,KATsB,CAItBG,OAJsB;AAAA,QAKtBC,OALsB,GAStBJ,KATsB,CAKtBI,OALsB;AAAA,QAMtBC,UANsB,GAStBL,KATsB,CAMtBK,UANsB;AAAA,QAOtBC,UAPsB,GAStBN,KATsB,CAOtBM,UAPsB;AAAA,QAQtBC,OARsB,GAStBP,KATsB,CAQtBO,OARsB;AAY1B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,WAAW,GAAG,EAAf,GAAsB,IAAGA,WAAY,EAArC,GAAyCA,WAD9C,OAC6DC,WAAW,GAAG,EAAf,GAAsB,IAAGA,WAAY,EAArC,GAAyCA,WADrG,CADJ;AAKH,CAjBM;AAmBP","sourcesContent":["import React from 'react'\n\nexport const Timer = props => {\n    const { \n        work, \n        start,\n        minutes, \n        seconds, \n        plusMinute, \n        plusSecond, \n        restart \n    } = props\n\n\n    return(\n        <div>       \n            {(showMinutes < 10) ? `0${showMinutes}` : showMinutes}:{(showSeconds < 10) ? `0${showSeconds}` : showSeconds}\n        </div>\n    )\n}\n\n/*\n    let timeOut\n    if(work){\n        timeOut = setTimeout(() => plusSecond(), 1000)\n        if(seconds > 59){\n            plusMinute()\n            clearTimeout(timeOut)\n        }\n    } else if(!work){\n        restart()\n        clearTimeout(timeOut)\n    }\n*/"]},"metadata":{},"sourceType":"module"}