{"ast":null,"code":"import _objectSpread from \"/home/iseestars/js-projects/test-react-apps/task-timer-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CHANGE_TIMER } from './actions.js';\nimport { GET_TASK_NAME } from './actions.js';\nconst initialState = {\n  isTimerWorking: false,\n  startTime: '',\n  stopTime: '',\n  currentTime: '',\n  taskNameInput: '',\n  doneTasks: []\n};\nexport const reducer = (state = initialState, action) => {\n  if (!state.isTimerWorking && state.taskNameInput && action.type === CHANGE_TIMER) {\n    return _objectSpread({}, state, {\n      isTimerWorking: true\n    });\n  } else if (state.isTimerWorking && action.type === CHANGE_TIMER) {\n    return _objectSpread({}, state, {\n      isTimerWorking: false,\n      doneTasks: [...state.doneTasks, {\n        id: Date.now(),\n        name: state.taskNameInput,\n        startTime: state.startTime,\n        stopTime: state.stopTime,\n        duration: state.currentTime\n      }],\n      startTime: '',\n      stopTime: '',\n      currentTime: '',\n      taskNameInput: ''\n    });\n  } else if (action.type === GET_TASK_NAME) {\n    return _objectSpread({}, state, {\n      taskNameInput: action.payload\n    });\n  } else return state;\n};","map":{"version":3,"sources":["/home/iseestars/js-projects/test-react-apps/task-timer-app/src/store/reducers.js"],"names":["CHANGE_TIMER","GET_TASK_NAME","initialState","isTimerWorking","startTime","stopTime","currentTime","taskNameInput","doneTasks","reducer","state","action","type","id","Date","now","name","duration","payload"],"mappings":";AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,KADC;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,WAAW,EAAE,EAJI;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAMjBC,EAAAA,SAAS,EAAE;AANM,CAArB;AASA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,MAAI,CAACD,KAAK,CAACP,cAAP,IAAyBO,KAAK,CAACH,aAA/B,IAAgDI,MAAM,CAACC,IAAP,KAAgBZ,YAApE,EAAiF;AAC7E,6BAAWU,KAAX;AAAkBP,MAAAA,cAAc,EAAE;AAAlC;AACH,GAFD,MAEO,IAAIO,KAAK,CAACP,cAAN,IAAwBQ,MAAM,CAACC,IAAP,KAAgBZ,YAA5C,EAAyD;AAC5D,6BAAWU,KAAX;AAAkBP,MAAAA,cAAc,EAAE,KAAlC;AACIK,MAAAA,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqB;AAC5BK,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADwB;AAE5BC,QAAAA,IAAI,EAAEN,KAAK,CAACH,aAFgB;AAG5BH,QAAAA,SAAS,EAAEM,KAAK,CAACN,SAHW;AAI5BC,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAJY;AAK5BY,QAAAA,QAAQ,EAAEP,KAAK,CAACJ;AALY,OAArB,CADf;AAQIF,MAAAA,SAAS,EAAE,EARf;AASIC,MAAAA,QAAQ,EAAE,EATd;AAUIC,MAAAA,WAAW,EAAE,EAVjB;AAWIC,MAAAA,aAAa,EAAE;AAXnB;AAaH,GAdM,MAcA,IAAII,MAAM,CAACC,IAAP,KAAgBX,aAApB,EAAmC;AACtC,6BAAWS,KAAX;AAAkBH,MAAAA,aAAa,EAAEI,MAAM,CAACO;AAAxC;AACH,GAFM,MAEA,OAAOR,KAAP;AACV,CApBM","sourcesContent":["import { CHANGE_TIMER } from './actions.js'\nimport { GET_TASK_NAME } from './actions.js'\n\nconst initialState = {\n    isTimerWorking: false,\n    startTime: '',\n    stopTime: '',\n    currentTime: '',\n    taskNameInput: '',\n    doneTasks: []\n}\n\nexport const reducer = (state = initialState, action) => {\n    if (!state.isTimerWorking && state.taskNameInput && action.type === CHANGE_TIMER){\n        return {...state, isTimerWorking: true}\n    } else if (state.isTimerWorking && action.type === CHANGE_TIMER){\n        return {...state, isTimerWorking: false,\n            doneTasks: [...state.doneTasks, {\n                id: Date.now(),\n                name: state.taskNameInput,\n                startTime: state.startTime,\n                stopTime: state.stopTime,\n                duration: state.currentTime\n            }],\n            startTime: '',\n            stopTime: '',\n            currentTime: '',\n            taskNameInput: ''\n        }\n    } else if (action.type === GET_TASK_NAME) {\n        return {...state, taskNameInput: action.payload}\n    } else return state\n}\n"]},"metadata":{},"sourceType":"module"}