{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/MainComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeTimer, inputTaskName, increaseMinutesCount, increaseSecondsCount, resetCount } from '../store/actions';\nimport { Timer } from './Timer';\nimport { TaskNameInput } from './TaskNameInput';\nimport { StartStopButton } from './StartStopButton';\nimport { ScoreTable } from './ScoreTable';\n\nclass MainComponent extends React.Component {\n  render() {\n    const _this$props = this.props,\n          isTimerWorking = _this$props.isTimerWorking,\n          minutes = _this$props.minutes,\n          seconds = _this$props.seconds,\n          startMoment = _this$props.startMoment,\n          taskNameInput = _this$props.taskNameInput,\n          doneTasks = _this$props.doneTasks,\n          changeTimer = _this$props.changeTimer,\n          inputTaskName = _this$props.inputTaskName,\n          increaseMinutesCount = _this$props.increaseMinutesCount,\n          increaseSecondsCount = _this$props.increaseSecondsCount,\n          resetCount = _this$props.resetCount;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      work: isTimerWorking,\n      start: startMoment,\n      minutes: minutes,\n      seconds: seconds,\n      plusMinute: increaseMinutesCount,\n      plusSecond: increaseSecondsCount,\n      restart: resetCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(TaskNameInput, {\n      data: taskNameInput,\n      edit: e => inputTaskName(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(StartStopButton, {\n      action: changeTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      data: doneTasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isTimerWorking: state.isTimerWorking,\n    taskNameInput: state.taskNameInput,\n    doneTasks: state.doneTasks,\n    minutes: state.time.minutes,\n    seconds: state.time.seconds,\n    startMoment: state.startMoment\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTimer,\n  inputTaskName,\n  increaseMinutesCount,\n  increaseSecondsCount,\n  resetCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/MainComponent.jsx"],"names":["React","connect","changeTimer","inputTaskName","increaseMinutesCount","increaseSecondsCount","resetCount","Timer","TaskNameInput","StartStopButton","ScoreTable","MainComponent","Component","render","props","isTimerWorking","minutes","seconds","startMoment","taskNameInput","doneTasks","e","target","value","mapStateToProps","state","time","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,oBAArC,EAA2DC,oBAA3D,EAAiFC,UAAjF,QAAmG,kBAAnG;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,aAAN,SAA4BX,KAAK,CAACY,SAAlC,CAA2C;AACvCC,EAAAA,MAAM,GAAE;AAAA,wBAaA,KAAKC,KAbL;AAAA,UAEAC,cAFA,eAEAA,cAFA;AAAA,UAGAC,OAHA,eAGAA,OAHA;AAAA,UAIAC,OAJA,eAIAA,OAJA;AAAA,UAKAC,WALA,eAKAA,WALA;AAAA,UAMAC,aANA,eAMAA,aANA;AAAA,UAOAC,SAPA,eAOAA,SAPA;AAAA,UAQAlB,WARA,eAQAA,WARA;AAAA,UASAC,aATA,eASAA,aATA;AAAA,UAUAC,oBAVA,eAUAA,oBAVA;AAAA,UAWAC,oBAXA,eAWAA,oBAXA;AAAA,UAYAC,UAZA,eAYAA,UAZA;AAeJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAES,cADV;AAEI,MAAA,KAAK,EAAEG,WAFX;AAGI,MAAA,OAAO,EAAEF,OAHb;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,UAAU,EAAEb,oBALhB;AAMI,MAAA,UAAU,EAAEC,oBANhB;AAOI,MAAA,OAAO,EAAEC,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAEa,aADV;AAEI,MAAA,IAAI,EAAEE,CAAC,IAAIlB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,EAcI,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAErB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEkB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AAmBH;;AAnCsC;;AAsC3C,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,cAAc,EAAEU,KAAK,CAACV,cADnB;AAEHI,IAAAA,aAAa,EAAEM,KAAK,CAACN,aAFlB;AAGHC,IAAAA,SAAS,EAAEK,KAAK,CAACL,SAHd;AAIHJ,IAAAA,OAAO,EAAES,KAAK,CAACC,IAAN,CAAWV,OAJjB;AAKHC,IAAAA,OAAO,EAAEQ,KAAK,CAACC,IAAN,CAAWT,OALjB;AAMHC,IAAAA,WAAW,EAAEO,KAAK,CAACP;AANhB,GAAP;AAQH,CATD;;AAWA,MAAMS,kBAAkB,GAAG;AACvBzB,EAAAA,WADuB;AAEvBC,EAAAA,aAFuB;AAGvBC,EAAAA,oBAHuB;AAIvBC,EAAAA,oBAJuB;AAKvBC,EAAAA;AALuB,CAA3B;AAQA,eAAeL,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { changeTimer, inputTaskName, increaseMinutesCount, increaseSecondsCount, resetCount } from '../store/actions'\nimport { Timer } from './Timer';\nimport { TaskNameInput } from './TaskNameInput';\nimport { StartStopButton } from './StartStopButton';\nimport { ScoreTable } from './ScoreTable';\n\nclass MainComponent extends React.Component{\n    render(){\n        const { \n            isTimerWorking,\n            minutes,\n            seconds,\n            startMoment,\n            taskNameInput,\n            doneTasks,\n            changeTimer,\n            inputTaskName,\n            increaseMinutesCount,\n            increaseSecondsCount,\n            resetCount\n        } = this.props\n\n        return(\n            <div>\n                <Timer \n                    work={isTimerWorking} \n                    start={startMoment}\n                    minutes={minutes}\n                    seconds={seconds}\n                    plusMinute={increaseMinutesCount}\n                    plusSecond={increaseSecondsCount}\n                    restart={resetCount}\n                />\n                <TaskNameInput \n                    data={taskNameInput}\n                    edit={e => inputTaskName(e.target.value)}\n                />\n                <StartStopButton action={changeTimer} />\n                <ScoreTable data={doneTasks} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        taskNameInput: state.taskNameInput,\n        doneTasks: state.doneTasks,\n        minutes: state.time.minutes,\n        seconds: state.time.seconds,\n        startMoment: state.startMoment\n    }\n}\n\nconst mapDispatchToProps = { \n    changeTimer, \n    inputTaskName, \n    increaseMinutesCount, \n    increaseSecondsCount,\n    resetCount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)"]},"metadata":{},"sourceType":"module"}