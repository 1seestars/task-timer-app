{"ast":null,"code":"import _objectSpread from \"/home/iseestars/js-projects/test-react-apps/task-timer-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { CHANGE_TIMER } from './actions.js';\nimport { GET_TASK_NAME } from './actions.js';\nconst initialState = {\n  isTimerWorking: false,\n  currentTime: '',\n  taskNameInput: '',\n  doneTasks: []\n};\nexport const reducer = (state = initialState, action) => {\n  if (!state.isTimerWorking && state.taskNameInput && action.type === CHANGE_TIMER) {\n    return _objectSpread({}, state, {\n      isTimerWorking: true\n    });\n  } else if (state.isTimerWorking && action.type === CHANGE_TIMER) {\n    return _objectSpread({}, state, {\n      isTimerWorking: false,\n      currentTime: '',\n      taskNameInput: ''\n    });\n  }\n};\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_CHANGE_FIRST_NAME:\n      return _objectSpread({}, state, {\n        firstName: action.payload\n      });\n\n    case ACTION_CHANGE_SECOND_NAME:\n      return _objectSpread({}, state, {\n        secondName: action.payload\n      });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/home/iseestars/js-projects/test-react-apps/task-timer-app/src/store/reducers.js"],"names":["CHANGE_TIMER","GET_TASK_NAME","initialState","isTimerWorking","currentTime","taskNameInput","doneTasks","reducer","state","action","type","rootReducer","ACTION_CHANGE_FIRST_NAME","firstName","payload","ACTION_CHANGE_SECOND_NAME","secondName"],"mappings":";AAAA,SAASA,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,KADC;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,MAAI,CAACD,KAAK,CAACL,cAAP,IAAyBK,KAAK,CAACH,aAA/B,IAAgDI,MAAM,CAACC,IAAP,KAAgBV,YAApE,EAAiF;AAC7E,6BAAWQ,KAAX;AAAkBL,MAAAA,cAAc,EAAE;AAAlC;AACH,GAFD,MAEO,IAAIK,KAAK,CAACL,cAAN,IAAwBM,MAAM,CAACC,IAAP,KAAgBV,YAA5C,EAAyD;AAC5D,6BAAWQ,KAAX;AAAkBL,MAAAA,cAAc,EAAE,KAAlC;AACIC,MAAAA,WAAW,EAAE,EADjB;AAEIC,MAAAA,aAAa,EAAE;AAFnB;AAKH;AACJ,CAVM;AAYP,OAAO,MAAMM,WAAW,GAAG,CAACH,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKE,wBAAL;AACI,+BAAYJ,KAAZ;AAAmBK,QAAAA,SAAS,EAAEJ,MAAM,CAACK;AAArC;;AACJ,SAAKC,yBAAL;AACI,+BAAYP,KAAZ;AAAmBQ,QAAAA,UAAU,EAAEP,MAAM,CAACK;AAAtC;AAJR;;AAMA,SAAON,KAAP;AACH,CARM","sourcesContent":["import { CHANGE_TIMER } from './actions.js'\nimport { GET_TASK_NAME } from './actions.js'\n\nconst initialState = {\n    isTimerWorking: false,\n    currentTime: '',\n    taskNameInput: '',\n    doneTasks: []\n}\n\nexport const reducer = (state = initialState, action) => {\n    if (!state.isTimerWorking && state.taskNameInput && action.type === CHANGE_TIMER){\n        return {...state, isTimerWorking: true}\n    } else if (state.isTimerWorking && action.type === CHANGE_TIMER){\n        return {...state, isTimerWorking: false,\n            currentTime: '',\n            taskNameInput: ''\n        \n        }\n    }\n}\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_CHANGE_FIRST_NAME:\n            return { ...state, firstName: action.payload }\n        case ACTION_CHANGE_SECOND_NAME:\n            return { ...state, secondName: action.payload }\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}