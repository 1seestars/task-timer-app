{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          minutes = _this$props.minutes,\n          seconds = _this$props.seconds,\n          increaseMinutesCount = _this$props.increaseMinutesCount,\n          increaseSecondsCount = _this$props.increaseSecondsCount;\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, new Date().getHours(), \":\", new Date().getMinutes());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    minutes: state.time.minutes,\n    seconds: state.time.seconds\n  };\n};\n\nconst mapDispatchToProps = {\n  increaseMinutesCount,\n  increaseSecondsCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx"],"names":["React","connect","increaseMinutesCount","increaseSecondsCount","Timer","Component","componentDidMount","props","minutes","seconds","interval","setInterval","tick","componentWillUnmount","clearInterval","render","Date","getHours","getMinutes","mapStateToProps","state","time","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,kBAA3D;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,iBAAiB,GAAE;AAAA,wBAKX,KAAKC,KALM;AAAA,UACPC,OADO,eACPA,OADO;AAAA,UAEPC,OAFO,eAEPA,OAFO;AAAA,UAGPP,oBAHO,eAGPA,oBAHO;AAAA,UAIPC,oBAJO,eAIPA,oBAJO;AAOf,SAAKO,QAAL,GAAgBC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA3B;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACD;;AAEHK,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,IAAIC,IAAJ,GAAWC,QAAX,EAAN,OAA8B,IAAID,IAAJ,GAAWE,UAAX,EAA9B,CADJ;AAGH;;AAnB8B;;AAsBnC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,OAAO,EAAEY,KAAK,CAACC,IAAN,CAAWb,OADjB;AAEHC,IAAAA,OAAO,EAAEW,KAAK,CAACC,IAAN,CAAWZ;AAFjB,GAAP;AAIH,CALD;;AAOA,MAAMa,kBAAkB,GAAG;AAAEpB,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAA3B;AAEA,eAAeF,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions'\n\nclass Timer extends React.Component{\n    componentDidMount(){\n        const { minutes,\n                seconds,\n                increaseMinutesCount,\n                increaseSecondsCount\n        } = this.props\n        \n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n      }\n\n    render(){\n        return(\n            <div>{new Date().getHours()}:{new Date().getMinutes()}</div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        minutes: state.time.minutes,\n        seconds: state.time.seconds\n    }\n}\n\nconst mapDispatchToProps = { increaseMinutesCount, increaseSecondsCount }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)"]},"metadata":{},"sourceType":"module"}