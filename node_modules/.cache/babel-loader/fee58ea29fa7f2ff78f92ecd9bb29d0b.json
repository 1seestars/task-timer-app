{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/MainComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeTimer, inputTaskName, changeSecondsCount, resetCount } from '../store/actions';\nimport { Timer } from './Timer';\nimport { TaskNameInput } from './TaskNameInput';\nimport { StartStopButton } from './StartStopButton';\nimport { ScoreTable } from './ScoreTable';\n\nclass MainComponent extends React.Component {\n  componentWillUnmount() {\n    const state = this.props.state;\n    localStorage.setItem('redux-store', JSON.stringify(state));\n  }\n\n  render() {\n    console.log(this.props.state);\n    const _this$props = this.props,\n          isTimerWorking = _this$props.isTimerWorking,\n          attentionBanner = _this$props.attentionBanner,\n          seconds = _this$props.seconds,\n          taskNameInput = _this$props.taskNameInput,\n          doneTasks = _this$props.doneTasks,\n          changeTimer = _this$props.changeTimer,\n          inputTaskName = _this$props.inputTaskName,\n          changeSecondsCount = _this$props.changeSecondsCount,\n          resetCount = _this$props.resetCount;\n    return React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      isTimerWorking: isTimerWorking,\n      seconds: seconds,\n      changeSecondsCount: changeSecondsCount,\n      resetCount: resetCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(TaskNameInput, {\n      data: taskNameInput,\n      edit: e => inputTaskName(e.target.value),\n      isTimerWorking: isTimerWorking,\n      action: changeTimer,\n      attentionBanner: attentionBanner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(StartStopButton, {\n      action: changeTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(ScoreTable, {\n      data: doneTasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isTimerWorking: state.isTimerWorking,\n    attentionBanner: state.attentionBanner,\n    taskNameInput: state.taskNameInput,\n    doneTasks: state.doneTasks,\n    seconds: state.seconds,\n    state\n  };\n};\n\nconst mapDispatchToProps = {\n  changeTimer,\n  inputTaskName,\n  changeSecondsCount,\n  resetCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/MainComponent.jsx"],"names":["React","connect","changeTimer","inputTaskName","changeSecondsCount","resetCount","Timer","TaskNameInput","StartStopButton","ScoreTable","MainComponent","Component","componentWillUnmount","state","props","localStorage","setItem","JSON","stringify","render","console","log","isTimerWorking","attentionBanner","seconds","taskNameInput","doneTasks","e","target","value","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,kBAArC,EAAyDC,UAAzD,QAA2E,kBAA3E;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,aAAN,SAA4BV,KAAK,CAACW,SAAlC,CAA2C;AACvCC,EAAAA,oBAAoB,GAAE;AAAA,UACXC,KADW,GACF,KAAKC,KADH,CACXD,KADW;AAElBE,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAApC;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWD,KAAvB;AADI,wBAYA,KAAKC,KAZL;AAAA,UAGAQ,cAHA,eAGAA,cAHA;AAAA,UAIAC,eAJA,eAIAA,eAJA;AAAA,UAKAC,OALA,eAKAA,OALA;AAAA,UAMAC,aANA,eAMAA,aANA;AAAA,UAOAC,SAPA,eAOAA,SAPA;AAAA,UAQAxB,WARA,eAQAA,WARA;AAAA,UASAC,aATA,eASAA,aATA;AAAA,UAUAC,kBAVA,eAUAA,kBAVA;AAAA,UAWAC,UAXA,eAWAA,UAXA;AAcJ,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,cAAc,EAAEiB,cADpB;AAEI,MAAA,OAAO,EAAEE,OAFb;AAGI,MAAA,kBAAkB,EAAEpB,kBAHxB;AAII,MAAA,UAAU,EAAEC,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,aAAD;AACI,MAAA,IAAI,EAAEoB,aADV;AAEI,MAAA,IAAI,EAAEE,CAAC,IAAIxB,aAAa,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAF5B;AAGI,MAAA,cAAc,EAAEP,cAHpB;AAII,MAAA,MAAM,EAAEpB,WAJZ;AAKI,MAAA,eAAe,EAAEqB,eALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAcI,oBAAC,eAAD;AAAiB,MAAA,MAAM,EAAErB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEwB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AAmBH;;AAvCsC;;AA0C3C,MAAMI,eAAe,GAAGjB,KAAK,IAAI;AAC7B,SAAO;AACHS,IAAAA,cAAc,EAAET,KAAK,CAACS,cADnB;AAEHC,IAAAA,eAAe,EAAEV,KAAK,CAACU,eAFpB;AAGHE,IAAAA,aAAa,EAAEZ,KAAK,CAACY,aAHlB;AAIHC,IAAAA,SAAS,EAAEb,KAAK,CAACa,SAJd;AAKHF,IAAAA,OAAO,EAAEX,KAAK,CAACW,OALZ;AAMHX,IAAAA;AANG,GAAP;AAQH,CATD;;AAWA,MAAMkB,kBAAkB,GAAG;AACvB7B,EAAAA,WADuB;AAEvBC,EAAAA,aAFuB;AAGvBC,EAAAA,kBAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;AAOA,eAAeJ,OAAO,CAAC6B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { changeTimer, inputTaskName, changeSecondsCount, resetCount } from '../store/actions'\nimport { Timer } from './Timer';\nimport { TaskNameInput } from './TaskNameInput';\nimport { StartStopButton } from './StartStopButton';\nimport { ScoreTable } from './ScoreTable';\n\nclass MainComponent extends React.Component{\n    componentWillUnmount(){\n        const {state} = this.props\n        localStorage.setItem('redux-store', JSON.stringify(state))\n    }\n\n    render(){\n        console.log(this.props.state)\n        const { \n            isTimerWorking,\n            attentionBanner,\n            seconds,\n            taskNameInput,\n            doneTasks,\n            changeTimer,\n            inputTaskName,\n            changeSecondsCount,\n            resetCount\n        } = this.props\n\n        return(\n            <div id=\"wrapper\">\n                <Timer \n                    isTimerWorking={isTimerWorking} \n                    seconds={seconds}\n                    changeSecondsCount={changeSecondsCount}\n                    resetCount={resetCount}\n                />\n                <TaskNameInput \n                    data={taskNameInput}\n                    edit={e => inputTaskName(e.target.value)}\n                    isTimerWorking={isTimerWorking}\n                    action={changeTimer}\n                    attentionBanner={attentionBanner}\n                />\n                <StartStopButton action={changeTimer} />\n                <ScoreTable data={doneTasks} />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isTimerWorking: state.isTimerWorking,\n        attentionBanner: state.attentionBanner,\n        taskNameInput: state.taskNameInput,\n        doneTasks: state.doneTasks,\n        seconds: state.seconds,\n        state\n    }\n}\n\nconst mapDispatchToProps = { \n    changeTimer, \n    inputTaskName, \n    changeSecondsCount,\n    resetCount\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)"]},"metadata":{},"sourceType":"module"}