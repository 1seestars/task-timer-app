{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/ScoreTable.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nexport const ScoreTable = ({\n  data\n}) => {\n  let i = 0;\n  let scores;\n\n  if (data[0]) {\n    scores = \"tableTrue\";\n  } else {\n    scores = \"tableFalse\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: scores,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    className: \"headRow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Item\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Task name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Start time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Stop time\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Duration\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, data.map(elem => React.createElement(\"tr\", {\n    key: elem.id,\n    className: \"hoverRows\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, ++i), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, elem.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"itemRoute\",\n    to: `/id${elem.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, elem.name)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, elem.startTime.hours < 10 ? `0${elem.startTime.hours}` : elem.startTime.hours, \":\", elem.startTime.minutes < 10 ? `0${elem.startTime.minutes}` : elem.startTime.minutes), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, elem.stopTime.hours < 10 ? `0${elem.stopTime.hours}` : elem.stopTime.hours, \":\", elem.stopTime.minutes < 10 ? `0${elem.stopTime.minutes}` : elem.stopTime.minutes), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, elem.duration, \"s\"))))));\n};","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/ScoreTable.jsx"],"names":["React","Link","ScoreTable","data","i","scores","map","elem","id","name","startTime","hours","minutes","stopTime","duration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpC,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,MAAJ;;AAEA,MAAGF,IAAI,CAAC,CAAD,CAAP,EAAW;AACPE,IAAAA,MAAM,GAAG,WAAT;AACH,GAFD,MAEO;AACHA,IAAAA,MAAM,GAAG,YAAT;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAO,IAAA,SAAS,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADJ,CADC,EAWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,GAAL,CAASC,IAAI,IACV;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,IAAA,SAAS,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,EAAEJ,CAAP,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAI,CAACC,EAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDD,IAAI,CAACE,IAAvD,CAAJ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,IAAI,CAACG,SAAL,CAAeC,KAAf,GAAuB,EAAxB,GAA+B,IAAGJ,IAAI,CAACG,SAAL,CAAeC,KAAM,EAAvD,GAA2DJ,IAAI,CAACG,SAAL,CAAeC,KAA/E,OAAwFJ,IAAI,CAACG,SAAL,CAAeE,OAAf,GAAyB,EAA1B,GAAiC,IAAGL,IAAI,CAACG,SAAL,CAAeE,OAAQ,EAA3D,GAA+DL,IAAI,CAACG,SAAL,CAAeE,OAArK,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,IAAI,CAACM,QAAL,CAAcF,KAAd,GAAsB,EAAvB,GAA8B,IAAGJ,IAAI,CAACM,QAAL,CAAcF,KAAM,EAArD,GAAyDJ,IAAI,CAACM,QAAL,CAAcF,KAA5E,OAAqFJ,IAAI,CAACM,QAAL,CAAcD,OAAd,GAAwB,EAAzB,GAAgC,IAAGL,IAAI,CAACM,QAAL,CAAcD,OAAQ,EAAzD,GAA6DL,IAAI,CAACM,QAAL,CAAcD,OAA/J,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,IAAI,CAACO,QAAV,MANJ,CADH,CADL,CAXC,CAAL,CADJ;AA2BH,CApCM","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const ScoreTable = ({ data }) => {\n    let i = 0\n    let scores\n\n    if(data[0]){\n        scores = \"tableTrue\"\n    } else {\n        scores = \"tableFalse\"\n    }\n    return(\n        <div><table className={scores}>\n            <thead>\n                <tr className=\"headRow\">\n                    <th>Item</th>\n                    <th>Id</th>\n                    <th>Task name</th>\n                    <th>Start time</th>\n                    <th>Stop time</th>\n                    <th>Duration</th>\n                </tr>\n            </thead>\n            <tbody>\n                {data.map(elem => \n                    <tr key={elem.id} className=\"hoverRows\">\n                        <td>{++i}</td>\n                        <td>{elem.id}</td>\n                        <td><Link className=\"itemRoute\" to={`/id${elem.id}`}>{elem.name}</Link></td>\n                        <td>{(elem.startTime.hours < 10) ? `0${elem.startTime.hours}` : elem.startTime.hours}:{(elem.startTime.minutes < 10) ? `0${elem.startTime.minutes}` : elem.startTime.minutes}</td>\n                        <td>{(elem.stopTime.hours < 10) ? `0${elem.stopTime.hours}` : elem.stopTime.hours}:{(elem.stopTime.minutes < 10) ? `0${elem.stopTime.minutes}` : elem.stopTime.minutes}</td>\n                        <td>{elem.duration}s</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}