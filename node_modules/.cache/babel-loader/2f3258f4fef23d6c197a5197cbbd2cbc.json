{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nexport const Timer = props => {\n  const work = props.work,\n        minutes = props.minutes,\n        seconds = props.seconds,\n        plusMinute = props.plusMinute,\n        plusSecond = props.plusSecond,\n        minusSeconds = props.minusSeconds,\n        restart = props.restart; // const timeOut = () => {\n  //     setTimeout(() => plusSeconds(), 1000)\n  // }\n\n  let timeOut;\n\n  if (work) {\n    timeOut = setTimeout(() => plusSecond(), 1000);\n  } else restart();\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, minutes < 10 ? `0${minutes}` : minutes, \":\", seconds < 10 ? `0${seconds}` : seconds);\n};","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx"],"names":["React","Timer","props","work","minutes","seconds","plusMinute","plusSecond","minusSeconds","restart","timeOut","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA,QAEtBC,IAFsB,GAIqCD,KAJrC,CAEtBC,IAFsB;AAAA,QAGtBC,OAHsB,GAIqCF,KAJrC,CAGtBE,OAHsB;AAAA,QAItBC,OAJsB,GAIqCH,KAJrC,CAItBG,OAJsB;AAAA,QAIbC,UAJa,GAIqCJ,KAJrC,CAIbI,UAJa;AAAA,QAIDC,UAJC,GAIqCL,KAJrC,CAIDK,UAJC;AAAA,QAIWC,YAJX,GAIqCN,KAJrC,CAIWM,YAJX;AAAA,QAIyBC,OAJzB,GAIqCP,KAJrC,CAIyBO,OAJzB,EAO1B;AACA;AACA;;AAEA,MAAIC,OAAJ;;AAEA,MAAGP,IAAH,EAAQ;AACJO,IAAAA,OAAO,GAAGC,UAAU,CAAC,MAAMJ,UAAU,EAAjB,EAAqB,IAArB,CAApB;AACH,GAFD,MAEOE,OAAO;;AAGd,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OADtC,OACiDC,OAAO,GAAG,EAAX,GAAkB,IAAGA,OAAQ,EAA7B,GAAiCA,OADjF,CADJ;AAKH,CAvBM","sourcesContent":["import React from 'react'\n\nexport const Timer = props => {\n    const { \n        work, \n        minutes, \n        seconds, plusMinute, plusSecond, minusSeconds, restart } = props\n\n\n    // const timeOut = () => {\n    //     setTimeout(() => plusSeconds(), 1000)\n    // }\n\n    let timeOut\n\n    if(work){\n        timeOut = setTimeout(() => plusSecond(), 1000)\n    } else restart()\n\n\n    return(\n        <div>       \n            {(minutes < 10) ? `0${minutes}` : minutes}:{(seconds < 10) ? `0${seconds}` : seconds}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}