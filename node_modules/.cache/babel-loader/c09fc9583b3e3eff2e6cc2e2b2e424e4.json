{"ast":null,"code":"var _jsxFileName = \"/home/iseestars/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions';\n\nclass Timer extends React.Component {\n  componentDidMount() {\n    const _this$props = this.props,\n          increaseMinutesCount = _this$props.increaseMinutesCount,\n          increaseSecondsCount = _this$props.increaseSecondsCount;\n    this.interval = setInterval(() => increaseSecondsCount(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  /*\n      if(this.state.seconds > 58){\n    this.setState(state => ({      \n      minutes: state.minutes + 1,\n      seconds: 0\n    }))\n  } else {\n    this.setState(state => ({      \n      seconds: state.seconds + 1\n  }));\n  }\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, minutes < 10 ? `0${this.state.minutes}` : this.state.minutes, \":\", this.state.seconds < 10 ? `0${this.state.seconds}` : this.state.seconds);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    minutes: state.time.minutes,\n    seconds: state.time.seconds\n  };\n};\n\nconst mapDispatchToProps = {\n  increaseMinutesCount,\n  increaseSecondsCount\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/iseestars/Документы/js-projects/test-react-apps/task-timer-app/src/components/Timer.jsx"],"names":["React","connect","increaseMinutesCount","increaseSecondsCount","Timer","Component","componentDidMount","props","interval","setInterval","componentWillUnmount","clearInterval","render","minutes","state","seconds","mapStateToProps","time","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,QAA2D,kBAA3D;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC/BC,EAAAA,iBAAiB,GAAE;AAAA,wBAGX,KAAKC,KAHM;AAAA,UACPL,oBADO,eACPA,oBADO;AAAA,UAEPC,oBAFO,eAEPA,oBAFO;AAKf,SAAKK,QAAL,GAAgBC,WAAW,CAAC,MAAMN,oBAAoB,EAA3B,EAA+B,IAA/B,CAA3B;AACH;;AAEDO,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACH;AAGD;;;;;;;;;;;;;;AA2BAI,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMC,OAAO,GAAG,EAAX,GAAkB,IAAG,KAAKC,KAAL,CAAWD,OAAQ,EAAxC,GAA4C,KAAKC,KAAL,CAAWD,OAD5D,OACuE,KAAKC,KAAL,CAAWC,OAAX,GAAqB,EAAtB,GAA6B,IAAG,KAAKD,KAAL,CAAWC,OAAQ,EAAnD,GAAuD,KAAKD,KAAL,CAAWC,OADxI,CADJ;AAKH;;AAhD8B;;AAmDnC,MAAMC,eAAe,GAAGF,KAAK,IAAI;AAC7B,SAAO;AACHD,IAAAA,OAAO,EAAEC,KAAK,CAACG,IAAN,CAAWJ,OADjB;AAEHE,IAAAA,OAAO,EAAED,KAAK,CAACG,IAAN,CAAWF;AAFjB,GAAP;AAIH,CALD;;AAOA,MAAMG,kBAAkB,GAAG;AAAEhB,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAA3B;AAEA,eAAeF,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { increaseMinutesCount, increaseSecondsCount } from '../store/actions'\n\nclass Timer extends React.Component{\n    componentDidMount(){\n        const { increaseMinutesCount,\n                increaseSecondsCount\n        } = this.props\n        \n        this.interval = setInterval(() => increaseSecondsCount(), 1000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n\n    /*\n        if(this.state.seconds > 58){\n      this.setState(state => ({      \n        minutes: state.minutes + 1,\n        seconds: 0\n      }))\n    } else {\n      this.setState(state => ({      \n        seconds: state.seconds + 1\n    }));\n    }\n    */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    render(){\n        \n        return(\n            <div>       \n                {(minutes < 10) ? `0${this.state.minutes}` : this.state.minutes}:{(this.state.seconds < 10) ? `0${this.state.seconds}` : this.state.seconds}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        minutes: state.time.minutes,\n        seconds: state.time.seconds\n    }\n}\n\nconst mapDispatchToProps = { increaseMinutesCount, increaseSecondsCount }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)"]},"metadata":{},"sourceType":"module"}